// Prisma Schema - MSSQL

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

// Blog Model
model Blog {
  id          Int      @id @default(autoincrement())
  title       String   @db.NVarChar(200)
  slug        String   @unique @db.VarChar(250)
  content     String   @db.NVarChar(Max)
  excerpt     String?  @db.NVarChar(500)
  image       String?  @db.VarChar(500)
  published   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("Blogs")
}

// Hizmetler Model
model Service {
  id          Int      @id @default(autoincrement())
  name        String   @db.NVarChar(200)
  slug        String   @unique @db.VarChar(250)
  description String   @db.NVarChar(Max)
  price       Decimal  @db.Decimal(18, 2)
  duration    Int      // dakika cinsinden
  image       String?  @db.VarChar(500)
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("Services")
}

// Randevu Model
model Appointment {
  id          Int      @id @default(autoincrement())
  customerName String  @db.NVarChar(100)
  phone       String   @db.VarChar(20)
  email       String?  @db.VarChar(100)
  serviceId   Int?
  date        DateTime
  time        String   @db.VarChar(10)
  notes       String?  @db.NVarChar(500)
  status      String   @default("pending") @db.VarChar(50) // pending, confirmed, cancelled
  createdAt   DateTime @default(now())

  @@map("Appointments")
}

// İletişim Mesajları Model
model Contact {
  id          Int      @id @default(autoincrement())
  name        String   @db.NVarChar(100)
  email       String   @db.VarChar(100)
  phone       String?  @db.VarChar(20)
  subject     String   @db.NVarChar(200)
  message     String   @db.NVarChar(Max)
  isRead      Boolean  @default(false)
  createdAt   DateTime @default(now())

  @@map("Contacts")
}

// Admin Kullanıcı Model (basit version)
model Admin {
  id          Int      @id @default(autoincrement())
  username    String   @unique @db.VarChar(50)
  password    String   @db.VarChar(500) // hash'lenmiş
  email       String   @unique @db.VarChar(100)
  createdAt   DateTime @default(now())

  @@map("Admins")
}

